---
services:
  app:
    depends_on:
      - db
      - solr
    image: dromedary
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - "3000:3000" # Rails
      - "1111:1111"
#     - "1234:1234" # RubyMine
#     - "26162:26162" # RubyMine
    environment:
      - SOLR_ROOT=http://solr:8983/solr
      - SOLR_COLLECTION=med-development
      - DATA_ROOT=/var/lib/app/data
    volumes:
      - .:/opt/app
      - data:/var/lib/app/data
      - gems:/var/lib/app/gems
    command:
      - sleep
      - infinity

  db:
    image: postgres:12-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - db:/var/lib/postgresql/data

  solr:
    image: solr:dromedary
    build:
      dockerfile: ./Dockerfile
      context: ./solr
    ports:
      - "8983:8983"
      - "9983:9983"
    volumes:
      - solr:/var/lib/solr/data
    environment:
      - SOLR_USERNAME=solr
      - SOLR_PASSWORD=solr
    command:
      - /bin/bash
      - -c
      - |
        solr -c
        solr auth enable -type basicAuth -credentials solr:solr
        sleep infinity
# To be made an internal method we can call via code or CLI
#curl -X PUT --header "Content-Type:application/octet-stream" --data-binary \
#   @/opt/solr/server/my_config_sets/med/med.zip \
#   http://solr:solr@localhost:8983/api/cluster/configs/med
#curl 'http://solr:solr@localhost:8983/solr/admin/collections?action=CREATE&numShards=1&name=med&collection.configName=med'

volumes:
  data:
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind
  gems:
  db:
  solr:
